import requests
from bs4 import BeautifulSoup
from telegram.ext import Application, CommandHandler, MessageHandler, filters

# ---- API KEYS ----
TELEGRAM_TOKEN = "8367431259:AAEa_O2BzOQ6cpgX4rdOS3SiTKdvMbWAtQM"
GOOGLE_API_KEY = "AIzaSyDCay69bExFEAt4y7XEiSK1WmG6KB5l-yw"
YOUTUBE_API_KEY = "AIzaSyBMa4CY_Ndc6RDq2uIDO0nZvhtxvsdF4h4"
GOOGLE_CX = "369d6d61d01414942"

# ---- ูุงุฆูุฉ ุงูุนููุงุก ุงูููุซูููู ----
trusted_keywords = [
    "ุงูุดูุฎ ุฑุจูุน ุงููุฏุฎูู", "ุงูุดูุฎ ุนุจูุฏ ุงูุฌุงุจุฑู", "ุงูุดูุฎ ุตุงูุญ ุงูููุฒุงู",
    "ุงูุดูุฎ ุตุงูุญ ุงููุญูุฏุงู", "ุงูุดูุฎ ุนุจุฏุงููุญุณู ุงูุนุจุงุฏ ุงูุจุฏุฑ", "ุงูุดูุฎ ูุญูุฏ ุจู ูุงุฏู ุงููุฏุฎูู",
    "ุงูุดูุฎ ุนุจุฏ ุงูุนุฒูุฒ ุขู ุงูุดูุฎ", "ุงูุดูุฎ ูุญูุฏ ุณุนูุฏ ุฑุณูุงู", "ุงูุดูุฎ ุงูุจุฑุนู ุงููููู",
    "ุงูุดูุฎ ุนุจุฏ ุงูุฑุฒุงู ุนูููู", "ุงูุดูุฎ ุญุณู ุจู ุนุจุฏ ุงูููุงุจ ุงูุจูุง ุงูุณููู", "ุงูุดูุฎ ุงูุจูููู",
    "ุงูุดูุฎ ุงูุฃููู ุงูุดูููุทู ุงูุฌููู", "ุงูุดูุฎ ุนุจุฏ ุงูุฑุญูู ุงูุนููุณุงู", "ุงูุดูุฎ ุณูููุงู ุงูุฑุญูู",
    "ุงูุดูุฎ ุนุงูุฏ ุจู ุฎูููุฉ ุงูุดูุฑู", "ุงูุดูุฎ ูุญูุฏ ุจู ุฑูุถุงู ุงููุงุฌุฑู", "ุงูุดูุฎ ุตุงูุญ ุขู ุงูุดูุฎ",
    "ุงูุดูุฎ ุนุจุฏุงูุฑุฒุงู ุงูุจุฏุฑ", "ุงูุดูุฎ ูุญูุฏ ุงูุนูุฌุฑู", "ุงูุดูุฎ ุนุจุฏ ุงูุฑุญูู ุงููููู",
    "ุงูุดูุฎ ูุญูุฏ ุงูุนููู", "ุงูุดูุฎ ููุงุญ ููุฏูุงุฑ", "ุงูุดูุฎ ูุญูุฏ ุจู ุฑุจูุน ุงููุฏุฎูู",
    "ุงูุดูุฎ ุฌูุงู ุงูุญุงุฑุซู", "ุงูุดูุฎ ุฃุณุงูุฉ ุจู ุฒูุฏ ุงููุฏุฎูู", "ุงูุดูุฎ ูุฒูู ูููุฑู",
    "ุงูุดูุฎ ุฃุจู ุจูุฑ ุขุฏุงุจ", "ุงูุดูุฎ ุฎุงูุฏ ุนุซูุงู ุงููุตุฑู", "ุงูุดูุฎ ุนุฒูุฒ ูุฑูุญุงู",
    "ุงูุดูุฎ ุญูุฏ ุงูุนุซูุงู", "ุงูุดูุฎ ุฎุงูุฏ ุจู ุนุจุฏ ุงูุฑุญูู ุงู ุฒูู", "ุงูุดูุฎ ูุญููุฏ ุดุงูุฑ",
    "ุงูุดูุฎ ุนูู ุจู ุฒูุฏ ุงููุฏุฎูู", "ุงูุดูุฎ ุงูุจุดูุฑ ุงูุฅุจุฑุงูููู", "ุงูุดูุฎ ุนุจุฏ ุงูุญููุฏ ุจู ุจุงุฏูุณ",
    "ุงูุดูุฎ ูุจุงุฑู ุงููููู", "ุงูุดูุฎ ุงูุทูุจ ุงูุนูุจู", "ุงูุดูุฎ ุนุงุฏู ุงูุดูุฑูุฌู",
    "ุงูุดูุฎ ุนุงุฏู ุงูุณูุฏ", "ุงูุดูุฎ ุตูู ุงูุฑุญูู ุงููุจุงุฑูููุฑู", "ุงูุดูุฎ ุฃุจู ุนุจุฏ ุงูุฃุนูู ุงููุตุฑู",
    "ุงูุดูุฎ ุชูู ุงูุฏูู ุงูููุงูู", "ุงูุดูุฎ ูุนูุงู ุงููุชุฑ", "ุงูุดูุฎ ุฃุจู ุฃุณุงูุฉ ูุตุทูู ุจู ููููู",
    "ุงูุดูุฎ ุณุงูู ููุฑูุฏุง", "ุงูุดูุฎ ุนุจุฏ ุงููุงุฏุฑ ุจู ูุญูุฏ ุงูุฌููุฏ", "ุงูุดูุฎ ุตุงูุญ ุงูุณูุฏู",
    "ุงูุดูุฎ ุฏุบุด ุงูุนุฌูู", "ุงูุดูุฎ ุงูุฃูุฑ ุชุณุฑู", "ุงูุดูุฎ ูุญูุฏ ุบูุซ", "ุงูุดูุฎ ุนูู ุงูุญุฐููู",
    "ุงูุดูุฎ ูุญูุฏ ุจู ุฒูุฏ ุงููุฏุฎูู", "ุงูุดูุฎ ุนุจุฏ ูุญูุฏ ุงูุฅูุงู", "ุงูุดูุฎ ุตุงูุญ ุงูุนุตููู",
    "ุงูุดูุฎ ุนูู ุงูุญุฏุงุฏู", "ุงูุดูุฎ ุนุงุฏู ุงููุดูุฑู", "ุงูุดูุฎ ุนุซูุงู ุงูุณุงููู",
    "ุงูุดูุฎ ุนุงุฏู ููุตูุฑ ุงูุจุงุดุง", "ุงูุดูุฎ ูุญูุฏ ุงููููู", "ุงูุดูุฎ ุนุจุฏุงูุณูุงู ุงูุณุญููู",
    "ุงูุดูุฎ ุตุงูุญ ุงูุณุญููู", "ุงูุดูุฎ ูุญูุฏ ุจุงุฒููู", "ุงูุดูุฎ ุณุนุฏ ุงูุญุตูู",
    "ุงูุดูุฎ ุฃุญูุฏ ุจุงุฒููู", "ุงูุดูุฎ ุนุจุฏ ุงูุฑุฒุงู ุญูุฒุฉ", "ุงูุดูุฎ ุฅุจุฑุงููู ูุญูุฏ ูุดูุฏุงู",
    "ุงูุดูุฎ ุณุนุฏ ุจู ูุงุตุฑ ุงูุดุซุฑู", "ุงูุดูุฎ ุนุจุฏ ุงูุณูุงู ุงูุดููุนุฑ", "ุงูุดูุฎ ุนุจุฏ ุงููู ุงููุตุงุจู",
    "ุงูุนูุงูุฉ ูุญูุฏ ุจู ุฃูุงู ุงูุฌุงูู", "ุงูุนูุงูุฉ ุนุจุฏุงูุนุฒูุฒ ุจู ุจุงุฒ", "ุงูุนูุงูุฉ ูุญูุฏ ุงุจู ุตุงูุญ ุงูุนุซูููู",
    "ุงูุนูุงูุฉ ูุญูุฏ ูุงุตุฑ ุงูุฃูุจุงูู", "ุงูุนูุงูุฉ ูุญูุฏ ุฃุญูุฏ ุงูุฃูุจุงูู", "ุงูุนูุงูุฉ ุฃุญูุฏ ุงููุฌูู",
    "ุงูุนูุงูุฉ ุฒูุฏ ุงููุฏุฎูู", "ุงูุดูุฎ ุนุจุฏ ุงูุณูุงู ุจู ุจุฑุฌุณ ุขู ุนุจุฏ ุงููุฑูู",
    "ุงูุดูุฎ ุนุจุฏ ุงููู ุจู ุญููุฏ", "ุงูุนูุงูุฉ ููุจู ุจู ูุงุฏู ุงููุงุฏุนู", "ุงูุนูุงูุฉ ุนูุฑ ุจู ูุญูุฏ ููุงุชู",
    "ุงูุดูุฎ ูุญูุฏ ุจู ุฅุณูุงุนูู ุงูุตูุนุงูู", "ุงูุดูุฎ ูุญูุฏ ุจู ุฅุจุฑุงููู ุงููุฒูุฑ", 
    "ุงูุดูุฎ ุนุจุฏ ุงูุฑุญูู ุงููุนููู ุงููููู", "ุงูุดูุฎ ูุญูุฏ ุจู ุนููุต ุงูุดููุงูู",
    "ุงูุดูุฎ ุญุงูุธ ุงูุญููู", "ุงูุนูุงูุฉ ุฃุญูุฏ ุดุงูุฑ", "ุงูุนูุงูุฉ ุญุงูุฏ ุงูููู",
    "ุงูุดูุฎ ูุญูุฏ ุฎููู ูุฑุงุณ", "ุงูุดูุฎ ุนุจุฏุงููู ุงูุบุฏูุงู", "ุงูุดูุฎ ุนุจุฏ ุงููู ุงููุฑุนุงูู"
]

# ---- HELPER FUNCTIONS ----
def get_page_text(url):
    try:
        r = requests.get(url, timeout=5)
        soup = BeautifulSoup(r.text, "html.parser")
        p = soup.find('p')
        if p:
            return p.get_text()[:250] + "..."
        return ""
    except:
        return ""

# ---- GOOGLE SEARCH ----
def search_google(query: str):
    url = f"https://www.googleapis.com/customsearch/v1?q={query}&key={GOOGLE_API_KEY}&cx={GOOGLE_CX}"
    try:
        r = requests.get(url)
        results = r.json().get("items", [])
        search_results = []
        for result in results[:5]:
            link = result['link']
            title = result['title']
            snippet = get_page_text(link)
            search_results.append({"title": title, "link": link, "snippet": snippet})
        return search_results
    except:
        return []

# ---- YOUTUBE SEARCH ----
def search_youtube(query: str):
    url = f"https://www.googleapis.com/youtube/v3/search?part=snippet&q={query}&key={YOUTUBE_API_KEY}&maxResults=5&type=video"
    try:
        r = requests.get(url)
        items = r.json().get("items", [])
        videos = []
        for item in items:
            video_id = item["id"]["videoId"]
            title = item["snippet"]["title"]
            videos.append({"title": title, "link": f"https://www.youtube.com/watch?v={video_id}"})
        return videos
    except:
        return []

# ---- SIMPLE FILTER ----
def simple_filter(results):
    filtered = []
    for r in results:
        text = r.get('snippet', '') + " " + r['title']
        for keyword in trusted_keywords:
            if keyword in text:
                filtered.append(r)
                break
    return filtered

# ---- TELEGRAM BOT ----
async def start(update, context):
    await update.message.reply_text(
        "๐ ูุฑุญุจุง ุจู ูู *ุจูุช ููุงูุฌ*.\nุงูุชุจ ุณุคุงูู ูุณูุชู ุงูุจุญุซ ูููุชุฑุฉ ุงููุชุงุฆุฌ."
    )

async def handle_message(update, context):
    question = update.message.text
    await update.message.reply_text("โณ ุฌุงุฑู ุงูุจุญุซ .. ุงุณุชูู ุดูู")

    google_results = search_google(question)
    youtube_results = search_youtube(question)
    combined = google_results + youtube_results

    filtered = simple_filter(combined)

    if not filtered:
        await update.message.reply_text("๐ ูู ูุชู ุงูุนุซูุฑ ุนูู ูุชุงุฆุฌ ููุซููุฉ ููุนููุงุก ุงูุณููููู.")
    else:
        msg = ""
        for r in filtered:
            msg += f"๐ {r['title']}\n๐ {r['link']}\n\n"
        await update.message.reply_text(msg)

# ---- MAIN ----
if __name__ == "__main__":
    app = Application.builder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    app.run_webhook(
        listen="0.0.0.0",
        port=10000,
        url_path=TELEGRAM_TOKEN,
        webhook_url=f"https://manhaj-bot.onrender.com/{TELEGRAM_TOKEN}"
    )
